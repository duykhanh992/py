try(data(package="psych"))
Workingdirectory = "C:/Users/Administrator/Documents/Master/MSIS-5223-70250 - Programming for Data Sci - 8282017 - 159 PM/Homework"
setwd(Workingdirectory)
data = paste(Workingdirectory,'\\CaliforniaHospitalData.csv', sep ='')
df = read.csv(data,header =T,sep =',')
library(tree)
library(rpart)
library(rpart.plot)
library(Metrics)
library(psych)
library(fmsb)
str(df)
names(df)
summary(df)
dfnew =  data.frame(TypeControl,Teaching,DonorType,NoFTE,NetPatRev,InOperExp,OutOperExp,OperRev,OperInc,AvlBeds)
dfnew =  data.frame(TypeControl,Teaching,DonorType,NoFTE,NetPatRev,InOperExp,OutOperExp,OperRev,OperInc,AvlBeds)
dfnew =  data.frame(TypeControl, Teaching,DonorType,NoFTE,NetPatRev,InOperExp,OutOperExp,OperRev,OperInc,AvlBeds)
Workingdirectory = "C:/Users/Administrator/Documents/Master/MSIS-5223-70250 - Programming for Data Sci - 8282017 - 159 PM/Homework"
setwd(Workingdirectory)
data = paste(Workingdirectory,'\\CaliforniaHospitalData.csv', sep ='')
df = read.csv(data,header =T,sep =',')
Workingdirectory = "C:/Users/Administrator/Documents/Master/MSIS-5223-70250 - Programming for Data Sci - 8282017 - 159 PM/Homework"
setwd(Workingdirectory)
data = paste(Workingdirectory,'\\CaliforniaHospitalData.csv', sep ='')
df = read.csv(data,header =T,sep =',')
library(tree)
library(rpart)
library(rpart.plot)
library(Metrics)
library(psych)
library(fmsb)
str(df)
names(df)
summary(df)
attach(df)
dfnew =  data.frame(TypeControl,Teaching,DonorType,NoFTE,NetPatRev,InOperExp,OutOperExp,OperRev,OperInc,AvlBeds)
dim(dfnew)
s = sample(61,40)
df_train = dfnew[s,]
df_test = dfnew[-s,]
df_test_features = df_test[-c(9)]
df_test_targets = df_test[c(9)]
dtm = rpart(OperInc ~., df_train, method ="anova")
rpart.plot(dtm, type =4 , extra = 101)
prediction <- predict(dtm, df_test_features)
rmse(df_test_targets, prediction)
df_test_features = df_test[-c(8)]
df_test_targets = df_test[c(8)]
dtm = rpart( OperRev~., df_train, method ="anova")
rpart.plot(dtm, type =4 , extra = 101)
prediction <- predict(dtm, df_test_features)
#operating revenue-resuts in predicted values close to the observed data values
rmse(df_test_targets, prediction)
df_test_features = df_test[-c(1)]
df_test_targets = df_test[c(1)]
dtm = rpart( TypeControl~., df_train, method ="class")
rpart.plot(dtm, type =4 , extra = 101)
prediction <- predict(dtm, df_test_features, type = "class")
as.numeric(prediction)
as.factor(df_test_targets)
str(prediction)
cohen.kappa(cbind(eval(parse(text=toString(df_test_targets))), as.numeric(prediction)))
df_test = dfnew[-s,]
df_test_features = df_test[-c(8)]
df_test_targets = df_test[c(8)]
dtm = rpart( OperRev~., df_train, method ="anova")
rpart.plot(dtm, type =4 , extra = 101)
prediction <- predict(dtm, df_test_features)
df_test_features = df_test(-c[3])
df_test_features = df_test[-c(3)]
df_test_targets = df_test[c(3)]
dtm = rpart(DonorType~., df_train, method = "class")
rpart.plot(dtm, type =4 , extra = 101)
df_train = dfnew[s,]
dtm = rpart(DonorType~., df_train, method = "class")
rpart.plot(dtm, type =4 , extra = 101)
names(df_train)
dtm = rpart(DonorType~., df_train, method = "class")
rpart.plot(dtm, type =4 , extra = 101)
df_test_features
prediction <- predict(dtm, df_test_features, type = "class")
as.numeric(prediction)
as.factor(df_test_targets)
str(prediction)
cohen.kappa(cbind(eval(parse(text=toString(df_test_targets))), as.numeric(prediction)))
